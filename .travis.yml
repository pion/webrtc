language: go
go:
  - 1.13

branches:
  only:
  - master

cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod
  npm: true
  yarn: true

env:
  global:
    - GO111MODULE=on
    - GO_VERSION=1.13
    - GOLANGCI_LINT_VERSION=1.19.1


jobs:
  include:
    - name: Lint
      env: CACHE_NAME=lint
      before_script:
        - go get -u github.com/sean-der/godox
        - |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | bash -s - -b $GOPATH/bin v${GOLANGCI_LINT_VERSION}
      install: true
      script:
        - bash .github/assert-contributors.sh
        - bash .github/lint-disallowed-functions-in-library.sh
        - bash .github/lint-commit-message.sh
        - bash .github/lint-filename.sh
        - godox
        - golangci-lint run --build-tags quic ./...
    - name: Go
      env: CACHE_NAME=go
      install: true
      script:
        - coverpkgs=$(go list ./... | grep -v examples | paste -s -d ',')
        - |
          go test -tags quic \
            -coverpkg=${coverpkgs} -coverprofile=cover.out -covermode=atomic \
            -v -race ./...
      after_success:
        - bash <(curl -s https://codecov.io/bash) -c -F go
    - name: WASM
      env: CACHE_NAME=wasm
      language: node_js
      node_js:
        - 12
      install:
        # Manually download and install Go instead of using gimme.
        # It looks like gimme Go causes some errors on go-test for Wasm.
        - curl -sSfL https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar -C ~ -xzf -
        - export GOROOT=~/go
        - export PATH=$GOROOT/bin:$PATH
        - yarn install
      script:
        - coverpkgs=$(go list ./... | paste -s -d ',')
        - |
          GOOS=js GOARCH=wasm go test \
            -coverpkg=${coverpkgs} -coverprofile=cover.out -covermode=atomic \
            -exec="./test-wasm/go_js_wasm_exec" -v .
      after_success:
        - bash <(curl -s https://codecov.io/bash) -c -F wasm
    - name: Go on i386
      env: CACHE_NAME=go386
      language: bash
      services: docker
      script:
        - |
          docker run \
            -u $(id -u):$(id -g) \
            -e "GO111MODULE=on" \
            -e "CGO_ENABLED=0" \
            -v $PWD:/go/src/github.com/pion/webrtc \
            -v $HOME/gopath/pkg/mod:/go/pkg/mod \
            -v $HOME/.cache/go-build:/.cache/go-build \
            -w /go/src/github.com/pion/webrtc \
            -it i386/golang:${GO_VERSION}-alpine \
            /usr/local/go/bin/go test -tags quic -v ./...
