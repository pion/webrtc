[
	{
		"title": "Data Channels",
		"link": "data-channels",
		"description": "The data-channels example shows how you can send/recv DataChannel messages from a web browser.",
		"type": "browser"
	},
	{
		"title": "Data Channels Create",
		"link": "data-channels-create",
		"description": "Example data-channels-create shows how you can send/recv DataChannel messages from a web browser. The difference with the data-channels example is that the data channel is initialized from the server side in this example.",
		"type": "browser"
	},
	{
		"title": "Data Channels Close",
		"link": "data-channels-close",
		"description": "Example data-channels-close is a variant of data-channels that allow playing with the life cycle of data channels.",
		"type": "browser"
	},
	{
		"title": "Gstreamer Receive",
		"link": "gstreamer-receive",
		"description": "The gstreamer-receive example shows how to receive media from the browser and play it live. This example uses GStreamer for rendering.",
		"type": "browser"
	},
	{
		"title": "Gstreamer Send",
		"link": "gstreamer-send",
		"description": "Example gstreamer-send shows how to send video to your browser. This example uses GStreamer to process the video.",
		"type": "browser"
	},
	{
		"title": "Pion to Pion",
		"link": "#",
		"description": "Example pion-to-pion is an example of two pion instances communicating directly! It therefore has no corresponding web page.",
		"type": "browser"
	},
	{
		"title": "Save to Disk",
		"link": "save-to-disk",
		"description": "The save-to-disk example shows how to record your webcam and save the footage to disk on the server side.",
		"type": "browser"
	},
	{
		"title": "SFU",
		"link": "sfu",
		"description": "The SFU example demonstrates how to broadcast a video to multiple peers. A broadcaster uploads the video once and the server forwards it to all other peers.",
		"type": "browser"
	}
]
